# -*- coding: utf-8 -*-
"""LPPLS_demo.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PTHc1oPWyNAt83Q0lPvYsv2rpJa5C-3h

# LPPLS Demo!

repo: https://github.com/Boulder-Investment-Technologies/lppls

repo: https://colab.research.google.com/drive/1Qvbdj4DGNcC9Oop9mA6Vzdvsoec6k2I0?usp=sharing
"""

from lppls import lppls
import numpy as np
import pandas as pd
from datetime import datetime as dt
import yfinance as yf

from datetime import date, timedelta
import pandas as pd

import os

from dotenv import load_dotenv
import os
import matplotlib.pyplot as plt
import cloudinary
import cloudinary.uploader

from engine.DataLoader import load_data
from engine.ComputeLPPLCI import compute_lpplci
from engine.plot_confidence_indicators import plot_confidence_indicators

if __name__ == "__main__":
    """load_dotenv()""" #현지에서 실행시 실행

    """ # Cloudinary 업로드 현지 실행용
    cloudinary.config(
        cloud_name = os.environ.get("CLOUDINARY_CLOUD_NAME"),
        api_key = os.environ.get("CLOUDINARY_API_KEY"),
        api_secret = os.environ.get("CLOUDINARY_API_SECRET")
    ) """

    # Cloudinary 업로드 깃허브 액션 실행용
    cloudinary.config(
        cloud_name = os.environ["CLOUDINARY_CLOUD_NAME"],
        api_key = os.environ["CLOUDINARY_API_KEY"],
        api_secret = os.environ["CLOUDINARY_API_SECRET"]
    )

    ticker_symbol = '^KS11'
    ticker = {
        'symbol': '^KS11',
        'name': 'KOSPI'
    }
    tickers = [
        {'symbol': '^KS11', 'name': 'KOSPI'},
        {'symbol': '^GSPC', 'name': 'SNP500'},
        {'symbol': '^NDX', 'name': 'NSDQ100'},
        {'symbol': 'TSLA', 'name': 'TESLA'},
        {'symbol': 'PLTR', 'name': 'PLTR'},
        {'symbol': '005930.KS', 'name': 'SMSN'},
        {'symbol': '000660.KS', 'name': 'SKHnx'},
        
    ]

    uploaded_urls = []

    for ticker in tickers:
        # 데이터 로드
        observations = load_data(ticker['symbol'])

        # LPPLS 계산
        lppls_model, res = compute_lpplci(observations, lppls)

        # confidence indicator 데이터프레임 생성
        res_df = lppls_model.compute_indicators(res)

        # 시각화
        plot_confidence_indicators(res, res_df)
        plt.suptitle(ticker['name'], fontsize=40, fontweight='bold')
        plt.savefig(f"{ticker['name']}.png", bbox_inches='tight')
        #plt.show()
        
        upload_result = cloudinary.uploader.upload(
            f"{ticker['name']}.png",
            public_id = f"lppls/{ticker['name']}",
            overwrite=True,
            invalidate=True,
            resource_type="image"
        )
        uploaded_urls.append({
            'name': ticker['name'],
            'symbol': ticker['symbol'],
            'url': upload_result['secure_url']
        })
    
    print("✅ 업로드된 이미지 URL 목록:")
    for item in uploaded_urls:
        print(f"{item['name']} ({item['symbol']}): {item['url']}")
